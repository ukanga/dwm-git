From 25f74ad3f4b28b8e35177f926bded368cee8942d Mon Sep 17 00:00:00 2001
From: Ukang'a Dickson <ukanga@gmail.com>
Date: Mon, 4 May 2020 00:21:16 +0300
Subject: [PATCH] status colors

---
 config.def.h | 22 ++++++++++++++++------
 dwm.c        | 20 +++++++++++++++++---
 2 files changed, 33 insertions(+), 9 deletions(-)

diff --git a/config.def.h b/config.def.h
index f629cc0..341d165 100644
--- a/config.def.h
+++ b/config.def.h
@@ -18,17 +18,27 @@ static char normfgcolor[]           = "#bbbbbb";
 static char selfgcolor[]            = "#eeeeee";
 static char selbordercolor[]        = "#005577";
 static char selbgcolor[]            = "#005577";
-static const unsigned int baralpha = 0xd0;
-static const unsigned int borderalpha = OPAQUE;
+static char warnbordercolor[]       = "#ff0000";
+static char warnbgcolor[]           = "#ffff00";
+static char warnfgcolor[]           = "#000000";
+static char urgentfgcolor[]         = "#ffffff";
+static char urgentbordercolor[]     = "#ff0000";
+static char urgentbgcolor[]         = "#ff0000";
 static char *colors[][3] = {
        /*               fg           bg           border   */
-       [SchemeNorm] = { normfgcolor, normbgcolor, normbordercolor },
-       [SchemeSel]  = { selfgcolor,  selbgcolor,  selbordercolor  },
+       [SchemeNorm]    = { normfgcolor,    normbgcolor,    normbordercolor },
+       [SchemeSel]     = { selfgcolor,     selbgcolor,     selbordercolor  },
+       [SchemeWarn]    = { warnfgcolor,    warnbgcolor,    warnbordercolor  },
+       [SchemeUrgent]  = { urgentfgcolor,  urgentbgcolor,  urgentbordercolor  },
 };
+static const unsigned int baralpha = 0xd0;
+static const unsigned int borderalpha = OPAQUE;
 static const unsigned int alphas[][3]      = {
 	/*               fg      bg        border     */
-	[SchemeNorm] = { OPAQUE, baralpha, borderalpha },
-	[SchemeSel]  = { OPAQUE, baralpha, borderalpha },
+	[SchemeNorm]    = { OPAQUE, baralpha, borderalpha },
+	[SchemeSel]     = { OPAQUE, baralpha, borderalpha },
+	[SchemeWarn]    = { OPAQUE, baralpha, borderalpha },
+	[SchemeUrgent]  = { OPAQUE, baralpha, borderalpha },
 };

 /* tagging */
diff --git a/dwm.c b/dwm.c
index 007e6e7..5e69d72 100644
--- a/dwm.c
+++ b/dwm.c
@@ -77,7 +77,7 @@

 /* enums */
 enum { CurNormal, CurResize, CurMove, CurLast }; /* cursor */
-enum { SchemeNorm, SchemeSel }; /* color schemes */
+enum { SchemeNorm, SchemeSel, SchemeWarn, SchemeUrgent }; /* color schemes */
 enum { NetSupported, NetWMName, NetWMState, NetWMCheck,
        NetWMFullscreen, NetActiveWindow, NetWMWindowType,
        NetWMWindowTypeDialog, NetClientList, NetLast }; /* EWMH atoms */
@@ -842,13 +842,27 @@ drawbar(Monitor *m)
 	int boxs = drw->fonts->h / 9;
 	int boxw = drw->fonts->h / 6 + 2;
 	unsigned int i, occ = 0, urg = 0;
+    char *ts = stext;
+    char *tp = stext;
+    int tx = 0;
+    char ctmp;
 	Client *c;

 	/* draw status first so it can be overdrawn by tags later */
 	if (m == selmon) { /* status is only drawn on selected monitor */
 		drw_setscheme(drw, scheme[SchemeNorm]);
-		tw = TEXTW(stext) - lrpad + 2; /* 2px right padding */
-		drw_text(drw, m->ww - tw, 0, tw, bh, 0, stext, 0);
+		tw = TEXTW(stext) - lrpad + 2; /* 2px right padding */
+		while (1) {
+			if ((unsigned int)*ts > LENGTH(colors)) { ts++; continue ; }
+			ctmp = *ts;
+			*ts = '\0';
+			drw_text(drw, m->ww - tw + tx, 0, tw - tx, bh, 0, tp, 0);
+			tx += TEXTW(tp) -lrpad;
+			if (ctmp == '\0') { break; }
+			drw_setscheme(drw, scheme[(unsigned int)(ctmp-1)]);
+			*ts = ctmp;
+			tp = ++ts;
+		}
 	}

 	for (c = m->clients; c; c = c->next) {
--
2.26.2

